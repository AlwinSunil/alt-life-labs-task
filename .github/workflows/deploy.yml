name: Deploy to AWS EC2

on:
  push:
    branches:
      - main
    paths:
      - "server/**"
      - "client/**"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Deploy to EC2 using SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e
            echo "Switching to root"
            sudo -i

            echo "Checking for Docker"
            if ! command -v docker &> /dev/null; then
              echo "Docker not found, installing..."
              sudo yum update -y
              sudo yum install -y docker
              sudo systemctl start docker
              sudo systemctl enable docker
            else
              echo "Docker is installed"
            fi

            echo "Checking if alt-life-labs-task directory exists"
            if [ ! -d "./alt-life-labs-task" ]; then
              echo "Error: Directory ./alt-life-labs-task not found! Exiting..."
              exit 1
            fi

            cd ./alt-life-labs-task

            echo "Pulling latest changes"
            git pull origin main

            # Create .env file with secrets
            cat > .env << EOF
            VITE_API_URL=${{ secrets.VITE_API_URL }}
            ACCESS_TOKEN_SECRET=${{ secrets.ACCESS_TOKEN_SECRET }}
            REFRESH_TOKEN_SECRET=${{ secrets.REFRESH_TOKEN_SECRET }}
            PORT=${{ secrets.PORT }}
            POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}
            POSTGRES_USER=${{ secrets.POSTGRES_USER }}
            POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
            POSTGRES_DB=${{ secrets.POSTGRES_DB }}
            EOF

            echo "Building updated Docker images with environment variables"
            sudo docker-compose build

            echo "Restarting Docker containers"
            sudo docker-compose up --detach --force-recreate

            echo "Deployment complete"
